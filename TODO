TODO:

- naming: turn all cases of FROM/FROMS/FROMFILE to use the term "table"

- syntax
    - support for FROM w/ aliases* (note: only 1 file in FROM will be supported until JOINS are supported)
    - column names and aliases*
    - column names and aliases in WHERE statenements (requries val retooling) ** 

- LIKE support **
    - piggyback off of CONTAINS

- functions
    - the Function item in queryparse.y is icky, only allowing
        0,1,2,3-ary functions. Should allow n-ary functions.
        - this requires more complex data structures to achieve
    - more aggregation functions
    - case statements


- types
    - lots of mixing of num vs long vs integer, dbl vs float vs double **
        - clean these up
    - the val.is_foo bools are icky; should be an enum instead **

- support for date/time type ***

- unit tests **

- support headers/header files *

- support column indexing
    - requires typing
    - save a sorted (len)key:value store of (char[64])hashed_column:(unsigned int)seekval
        - hashed_column is an md5 hash of the column value
        - seekval is the index of the start of the row in reference
    - contains a header of rowcount 

- support joins ***
    - indexed joins forced on any CSV larger than 100 lines.

*    = slated for next release
**   = slated for following release
***  you get the idea
